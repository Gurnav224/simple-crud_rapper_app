<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>

    <style>
      body {
        font-family: Arial, sans-serif;
        background-color: #f8f9fa;
        margin: 0;
        padding: 0;
      }

      .container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px;
      }
      .title {
        text-align: center;
        font-size: 2.5rem;
        color: #2d3748;
        margin-bottom: 20px;
      }

      .list-group {
        list-style-type: none;
        padding: 0;
      }

      .list-group-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        background-color: #ffffff;
        padding: 15px;
        margin-bottom: 10px;
        border: 1px solid #e2e8f0;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        transition: background-color 0.3s;
      }

      .list-group-item:hover {
        background-color: #f1f5f9;
      }

      .rapper-info {
        font-size: 1.1rem;
        color: #2d3748;
      }

      .rapper-name {
        font-weight: bold;
      }

      .born-name {
        color: #4a5568;
      }

      .button-group {
        display: flex;
        gap: 10px;
      }
      .delete__rapper__button,
      .update__like__button {
        background-color: #3182ce;
        color: #ffffff;
        border: none;
        border-radius: 5px;
        padding: 10px;
        cursor: pointer;
        display: flex;
        align-items: center;
        transition: background-color 0.3s;
        font-size: 1.2rem;
      }

      .delete__rapper__button {
        background-color: #e53e3e;
      }

      .delete__rapper__button:hover {
        background-color: #c53030;
      }

      .update__like__button:hover {
        background-color: #2b6cb0;
      }

      .icon {
        width: 24px;
        height: 24px;
        margin-right: 5px;
      }

      .like-count {
        font-weight: bold;
      }

      .divider {
        margin: 20px 0;
        border: 1px solid #e2e8f0;
      }

      form {
        background-color: #ffffff;
        padding: 20px 40px;
        border: 1px solid #e2e8f0;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      }

      .form-group {
        margin-bottom: 15px;
      }

      .form-label {
        display: block;
        font-size: 1rem;
        color: #2d3748;
        margin-bottom: 5px;
      }

      .form-input {
        width: 100%;
        padding: 10px;
        border: 1px solid #e2e8f0;
        border-radius: 5px;
        font-size: 1rem;
      }

      .submit-button {
        background-color: #3182ce;
        color: #ffffff;
        border: none;
        border-radius: 5px;
        padding: 10px 15px;
        font-size: 1rem;
        cursor: pointer;
        transition: background-color 0.3s;
      }

      .submit-button:hover {
        background-color: #2b6cb0;
      }

      .message {
        color: #e53e3e;
        font-size: 1rem;
        margin-top: 10px;
      }
    </style>
  </head>

  <body class="container">
    <h1 class="title">Rapper Name Application</h1>
    <ul class="list-group">
      <% rappers.forEach(element => { %>
      <li class="list-group-item">
        <div class="rapper-info">
          <span class="rapper-name"><%= element.rapperName %></span> -
          <span class="born-name"><%= element.bornName %></span>
        </div>

        <div class="button-group">
          <button data-id="<%= element._id %>" class="update__like__button">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="20"
              height="20"
              fill="currentColor"
              class="icon"
              viewBox="0 0 16 16"
            >
              <path
                d="M8.864.046C7.908-.193 7.02.53 6.956 1.466c-.072 1.051-.23 2.016-.428 2.59-.125.36-.479 1.013-1.04 1.639-.557.623-1.282 1.178-2.131 1.41C2.685 7.288 2 7.87 2 8.72v4.001c0 .845.682 1.464 1.448 1.545 1.07.114 1.564.415 2.068.723l.048.03c.272.165.578.348.97.484.397.136.861.217 1.466.217h3.5c.937 0 1.599-.477 1.934-1.064a1.86 1.86 0 0 0 .254-.912c0-.152-.023-.312-.077-.464.201-.263.38-.578.488-.901.11-.33.172-.762.004-1.149.069-.13.12-.269.159-.403.077-.27.113-.568.113-.857 0-.288-.036-.585-.113-.856a2 2 0 0 0-.138-.362 1.9 1.9 0 0 0 .234-1.734c-.206-.592-.682-1.1-1.2-1.272-.847-.282-1.803-.276-2.516-.211a10 10 0 0 0-.443.05 9.4 9.4 0 0 0-.062-4.509A1.38 1.38 0 0 0 9.125.111zM11.5 14.721H8c-.51 0-.863-.069-1.14-.164-.281-.097-.506-.228-.776-.393l-.04-.024c-.555-.339-1.198-.731-2.49-.868-.333-.036-.554-.29-.554-.55V8.72c0-.254.226-.543.62-.65 1.095-.3 1.977-.996 2.614-1.708.635-.71 1.064-1.475 1.238-1.978.243-.7.407-1.768.482-2.85.025-.362.36-.594.667-.518l.262.066c.16.04.258.143.288.255a8.34 8.34 0 0 1-.145 4.725.5.5 0 0 0 .595.644l.003-.001.014-.003.058-.014a9 9 0 0 1 1.036-.157c.663-.06 1.457-.054 2.11.164.175.058.45.3.57.65.107.308.087.67-.266 1.022l-.353.353.353.354c.043.043.105.141.154.315.048.167.075.37.075.581 0 .212-.027.414-.075.582-.05.174-.111.272-.154.315l-.353.353.353.354c.047.047.109.177.005.488a2.2 2.2 0 0 1-.505.805l-.353.353.353.354c.006.005.041.05.041.17a.9.9 0 0 1-.121.416c-.165.288-.503.56-1.066.56z"
              />
            </svg>

            <span class="like-count" id="count-update">
              <%= element.likes %>
            </span>
          </button>
          <button data-id="<%= element._id %>" class="delete__rapper__button">
            <div class="span">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="16"
                height="16"
                fill="currentColor"
                class="bi bi-trash-fill"
                viewBox="0 0 16 16"
              >
                <path
                  d="M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5M8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5m3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0"
                />
              </svg>
            </div>
          </button>
        </div>
      </li>
      <% }) %>
    </ul>

    <hr class="divider" />
    <form>
      <div class="form-group">
        <label class="form-label" for="rapperName">Rapper Name:</label>
        <input
          class="form-input"
          type="text"
          name="rapperName"
          id="rapperName"
        />
      </div>
      <div class="form-group">
        <label class="form-label" for="bornName">Born Name:</label>
        <input class="form-input" type="text" name="bornName" id="bornName" />
      </div>
      <button type="submit" class="submit-button">submit</button>
      <p id="message"></p>
    </form>

    <script>
      const rapperName = document.querySelector("#rapperName");
      const bornName = document.querySelector("#bornName");
      const form = document.querySelector("form");
      const message = document.querySelector("#message");
      const icon = document.querySelector(".icon");
      const listGroup = document.querySelector(".list-group");

      // let apiUrl = "https://simple-crud-rapper-app.onrender.com";

      let apiUrl = "http://localhost:3000";

      function renderList() {
        fetch(`${apiUrl}/rappers`)
          .then((response) => response.json())
          .then((data) => {
            listGroup.innerHTML = "";

            data.allRappers.forEach((element) => {
              const li = document.createElement("li");

              li.className = "list-group-item";

              li.innerHTML = `

        <div class="rapper-info">
             <span class="rapper-name">${element.rapperName}</span> - 
          <span class="born-name">${element.bornName}</span>
        </div>

        <div class="button-group">
          <button
          data-id="${element._id}"
          class="update__like__button"
        >
         
          <svg  xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="icon" viewBox="0 0 16 16">
            <path d="M8.864.046C7.908-.193 7.02.53 6.956 1.466c-.072 1.051-.23 2.016-.428 2.59-.125.36-.479 1.013-1.04 1.639-.557.623-1.282 1.178-2.131 1.41C2.685 7.288 2 7.87 2 8.72v4.001c0 .845.682 1.464 1.448 1.545 1.07.114 1.564.415 2.068.723l.048.03c.272.165.578.348.97.484.397.136.861.217 1.466.217h3.5c.937 0 1.599-.477 1.934-1.064a1.86 1.86 0 0 0 .254-.912c0-.152-.023-.312-.077-.464.201-.263.38-.578.488-.901.11-.33.172-.762.004-1.149.069-.13.12-.269.159-.403.077-.27.113-.568.113-.857 0-.288-.036-.585-.113-.856a2 2 0 0 0-.138-.362 1.9 1.9 0 0 0 .234-1.734c-.206-.592-.682-1.1-1.2-1.272-.847-.282-1.803-.276-2.516-.211a10 10 0 0 0-.443.05 9.4 9.4 0 0 0-.062-4.509A1.38 1.38 0 0 0 9.125.111zM11.5 14.721H8c-.51 0-.863-.069-1.14-.164-.281-.097-.506-.228-.776-.393l-.04-.024c-.555-.339-1.198-.731-2.49-.868-.333-.036-.554-.29-.554-.55V8.72c0-.254.226-.543.62-.65 1.095-.3 1.977-.996 2.614-1.708.635-.71 1.064-1.475 1.238-1.978.243-.7.407-1.768.482-2.85.025-.362.36-.594.667-.518l.262.066c.16.04.258.143.288.255a8.34 8.34 0 0 1-.145 4.725.5.5 0 0 0 .595.644l.003-.001.014-.003.058-.014a9 9 0 0 1 1.036-.157c.663-.06 1.457-.054 2.11.164.175.058.45.3.57.65.107.308.087.67-.266 1.022l-.353.353.353.354c.043.043.105.141.154.315.048.167.075.37.075.581 0 .212-.027.414-.075.582-.05.174-.111.272-.154.315l-.353.353.353.354c.047.047.109.177.005.488a2.2 2.2 0 0 1-.505.805l-.353.353.353.354c.006.005.041.05.041.17a.9.9 0 0 1-.121.416c-.165.288-.503.56-1.066.56z"/>
          </svg>
          
          <span class="like-count" id="count-update"> ${element.likes}</span>
        </button>
          <button
          data-id="${element._id}"
          class="delete__rapper__button"
        >
        <div class="span">

          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash-fill" viewBox="0 0 16 16">
            <path d="M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5M8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5m3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0"/>
          </svg>
        </div>
        </button>
       
        </div>
        
            `;
              listGroup.appendChild(li);
            });

            const deleteRapperButton = document.querySelectorAll(
        ".delete__rapper__button"
      );

      deleteRapperButton.forEach((deleteButton) => {
        deleteButton.addEventListener("click", function () {
          const id = deleteButton.getAttribute("data-id");
          const li = deleteButton.parentElement.parentElement;
          console.log(li);
          fetch(`${apiUrl}/rapper/${id}`, {
            method: "DELETE",
          })
            .then((response) => response.json())
            .then((data) => {
              console.log("rapper deleted successfully", data);
              li.remove();
            })
            .catch((error) => {
              console.error("error while deleting the rapper", error.message);
            });
        });
      });

            const updateLikeButtons = document.querySelectorAll(
              ".update__like__button"
            );
            let counter  = 0;

            updateLikeButtons.forEach((button) => {
              button.addEventListener("click", function () {
                const id = button.getAttribute("data-id");
        const countUpdate = document.querySelectorAll("#count-update");
        counter++;
        console.log(button.children[1]);
        fetch(`${apiUrl}/rapper/${id}`, {
          method: "PUT",
          headers: {
            "Content-Type": "application/json",
          },
        })
          .then((response) => response.json())
          .then((like) => {
            button.children[1].textContent = like.updatedRapper.likes;
          })
          .catch((error) => {
            console.error(
              "error while uploading the like button",
              error.message
            );
          });
              });
            });

          });



      }

      renderList();

      form.addEventListener("submit", (e) => {
        e.preventDefault();

        rapperName.style.outline = "none";
        bornName.style.outline = "none";
        message.textContent = "";

        let hasError = false;

        if (rapperName.value.trim() === "" && bornName.value.trim() === "") {
          rapperName.style.outline = "2px solid red";
          bornName.style.outline = "2px solid red";
          message.textContent = "Please fill all the inputs";
          message.style.color = "red";
          hasError = true;
        } else {
          // Optimistic UI Update: Set outline to blue when input is not empty

          if (rapperName.value.trim() !== "") {
            rapperName.style.outline = "2px solid blue";
          }
          if (bornName.value.trim() !== "") {
            bornName.style.outline = "2px solid blue";
          }
        }

        if (hasError) return;

        let newrapper = {
          rapperName: rapperName.value,
          bornName: bornName.value,
        };
        fetch(`${apiUrl}/rapper`, {
          method: "POST",
          body: JSON.stringify(newrapper),
          headers: {
            "Content-Type": "application/json",
          },
        })
          .then((response) => {
            return response.json();
          })
          .then((data) => {
            console.log("new rapper added successfully");

            message.textContent = "new rapper added successfully";
            message.style.color = "green";
            renderList();
          })
          .catch((error) => {
            console.error("error to adding new successfully", error.message);
            message.textContent = "error to adding new rapper";
            message.style.color = "red";
          });
      });

    
     
    </script>
  </body>
</html>
